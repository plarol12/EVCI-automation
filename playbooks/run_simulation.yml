---
- name: Run attacker simulation and export CVE list
  hosts: localhost
  gather_facts: false
  connection: local

  vars:
    entry_point: "{{ survey_entry_point }}"
    attacker_algo: "{{ survey_attacker_algo }}"
    weighted: "{{ survey_weighted | default('false') }}"

  tasks:
    - name: Run attacker simulation script
<<<<<<< HEAD
      command: "python3 ../simulation/attacker_al_47.py {{ entry_point }} {{ attacker_algo }} {{ weighted }}"
      register: sim_out
      changed_when: false
      ignore_errors: yes

    - name: Check if simulation output looks valid
      fail:
        msg: "Simulation failed. Ensure 'networkx' and 'matplotlib' are installed in the Execution Environment."
      when: sim_out.rc != 0

    - name: Extract CVEs from output
      set_fact:
        cve_list: "{{ sim_out.stdout | regex_findall('CVE-\\\\d{4}-\\\\d{4,}') | unique }}"

    - name: Save CVEs to vars/cves.yml
      copy:
        dest: vars/cves.yml
=======
      command: >
        python3 ../simulation/attacker_al_47.py
        "{{ entry_point }}" "{{ attacker_algo }}" "{{ weighted }}"
      register: sim_out
      changed_when: false

    - name: Fail if script crashed
      fail:
        msg: "Simulation failed"
      when: sim_out.rc != 0

    - name: Extract CVEs
      set_fact:
        cve_list: "{{ sim_out.stdout | regex_findall('CVE-\d{4}-\d{4,}') | unique }}"

    - name: Save CVEs
      copy:
        dest: ../vars/cves.yml
>>>>>>> 507b6f6 (Push working automation project: simulation and patching for AWX)
        content: |
          ---
          cve_list: {{ cve_list | to_nice_yaml(indent=2) }}

<<<<<<< HEAD
    - name: Share CVEs for workflow
=======
    - name: Share CVEs
>>>>>>> 507b6f6 (Push working automation project: simulation and patching for AWX)
      set_stats:
        data:
          patched_cves: "{{ cve_list }}"
